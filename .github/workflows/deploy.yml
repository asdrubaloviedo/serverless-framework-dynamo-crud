name: Serverless Deployment

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  package-layer:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Cache Layer Package
        id: cache-layer
        uses: actions/cache@v3
        with:
          path: layer/nodejs-layer.zip
          key: node-layer-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            node-layer-

      - name: Install dependencies if cache missed
        if: steps.cache-layer.outputs.cache-hit != 'true'
        run: npm install

      - name: Package Lambda Layer
        if: steps.cache-layer.outputs.cache-hit != 'true'
        run: |
          mkdir -p layer/nodejs
          cp -R node_modules layer/nodejs
          cd layer && zip -r nodejs-layer.zip nodejs
          cd ..

      - name: Upload Layer to S3
        if: steps.cache-layer.outputs.cache-hit != 'true'
        run: |
          aws s3 cp layer/nodejs-layer.zip s3://bucket-serverless-course-232132/nodejs-layer.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1

  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm run test

  deploy:
    runs-on: ubuntu-latest
    needs: [package-layer, run-tests]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy with Serverless Framework
        run: npx serverless deploy --stage dev
